{"version":3,"sources":["api/users.ts","components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","services/getUserById.ts","services/preparedTodos.ts","api/todos.ts","App.tsx","index.tsx"],"names":["id","name","username","email","UserInfo","user","className","href","TodoInfo","todo","title","completed","classNames","TodoList","todos","map","getUserById","userId","users","find","initialTodos","App","useState","setTodos","setTitle","selectedUser","setSelectedUser","hasTitleError","setHasTitleError","hasSelectUserError","setSelectUserError","action","method","onSubmit","event","preventDefault","maxId","Math","max","type","placeholder","value","onChange","target","trimStart","onBlur","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ae9312d6.chunk.js","sourcesContent":["export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import React from 'react';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User | null,\n};\n\nexport const UserInfo: React.FC<Props> = ({ user }) => {\n  return (\n    <a className=\"UserInfo\" href={`mailto:${user?.email}`}>\n      {user?.name}\n    </a>\n  );\n};\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo,\n};\n\nexport const TodoInfo: React.FC<Props> = ({ todo }) => {\n  const {\n    id,\n    title,\n    user,\n    completed,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">{title}</h2>\n\n      <UserInfo\n        user={user}\n      />\n    </article>\n  );\n};\n","import React from 'react';\nimport { Todo } from '../../types/Todo';\nimport { TodoInfo } from '../TodoInfo';\n\ntype Props = {\n  todos: Todo[],\n};\n\nexport const TodoList: React.FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {\n        todos.map(todo => (\n          <TodoInfo\n            key={todo.id}\n            todo={todo}\n          />\n        ))\n      }\n    </section>\n  );\n};\n","import users from '../api/users';\n\nexport const getUserById = (userId: number) => {\n  return users.find(user => user.id === userId);\n};\n","import todosFromServer from '../api/todos';\nimport { getUserById } from './getUserById';\n\nexport const initialTodos = todosFromServer.map(todo => ({\n  ...todo,\n  user: getUserById(todo.userId) || null,\n}));\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import React, { useState } from 'react';\nimport './App.scss';\nimport users from './api/users';\nimport { TodoList } from './components/TodoList';\nimport { initialTodos } from './services/preparedTodos';\nimport { Todo } from './types/Todo';\nimport { getUserById } from './services/getUserById';\n\nexport const App = () => {\n  const [todos, setTodos] = useState<Todo[]>(initialTodos);\n\n  const [title, setTitle] = useState('');\n  const [selectedUser, setSelectedUser] = useState(0);\n\n  const [hasTitleError, setHasTitleError] = useState(false);\n  const [hasSelectUserError, setSelectUserError] = useState(false);\n\n  const handleTitleChange = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setTitle(event.target.value.trimStart());\n    setHasTitleError(false);\n  };\n\n  const handleUserSelect = (event: React.ChangeEvent<HTMLSelectElement>) => {\n    setSelectedUser(+event.target.value);\n    setSelectUserError(false);\n  };\n\n  const resetForm = () => {\n    setHasTitleError(false);\n    setSelectUserError(false);\n    setTitle('');\n    setSelectedUser(0);\n  };\n\n  const handleSumbmit = (event: React.FormEvent) => {\n    event.preventDefault();\n\n    setHasTitleError(!title);\n    setSelectUserError(!selectedUser);\n\n    if (!title || !selectedUser) {\n      return;\n    }\n\n    resetForm();\n\n    const maxId = Math.max(...todos.map(todo => todo.id));\n\n    setTodos([\n      ...todos,\n      {\n        user: getUserById(selectedUser) || null,\n        id: maxId + 1,\n        title,\n        completed: false,\n      },\n    ]);\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/todos\"\n        method=\"POST\"\n        onSubmit={handleSumbmit}\n      >\n        <div className=\"field\">\n          <input\n            type=\"text\"\n            placeholder=\"Enter a title\"\n            data-cy=\"titleInput\"\n            value={title}\n            onChange={handleTitleChange}\n            onBlur={() => setHasTitleError(!title)}\n          />\n\n          {\n            hasTitleError\n            && (\n              <span className=\"error\">\n                Please enter a title\n              </span>\n            )\n          }\n        </div>\n\n        <div className=\"field\">\n          <select\n            data-cy=\"userSelect\"\n            value={selectedUser}\n            onChange={handleUserSelect}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n            {users.map(user => (\n              <option\n                value={user.id}\n                key={user.id}\n              >\n                {user.name}\n              </option>\n            ))}\n          </select>\n\n          {\n            hasSelectUserError\n            && (\n              <span className=\"error\">Please choose a user</span>\n            )\n          }\n        </div>\n\n        <button type=\"submit\" data-cy=\"submitButton\">\n          Add\n        </button>\n      </form>\n\n      <TodoList\n        todos={todos}\n      />\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}